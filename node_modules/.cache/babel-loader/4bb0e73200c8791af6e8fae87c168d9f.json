{"ast":null,"code":"var _jsxFileName = \"/home/courtney/dev/FinalProject/Front-End-Final/src/components/Main.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Post from './Post.js';\nimport Form from './Form.js';\nlet baseUrl = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'https://blooming-plateau-41459.herokuapp.com';\n} else {\n  baseUrl = 'https://blooming-plateau-41459.herokuapp.com';\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPosts = () => {\n      fetch(`${baseUrl}`).then(data => data.json()).then(jData => {\n        this.setState({\n          posts: jData\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleCreate = createData => {\n      console.log('create', createData);\n      fetch(`${baseUrl}/post`, {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(createdPost => {\n        return createdPost.json();\n      }).then(jsonedPost => {\n        console.log(jsonedPost);\n        this.props.handleView('home');\n        this.setState(prevState => {\n          console.log('state', prevState);\n          prevState.posts = jsonedPost;\n          return {\n            posts: prevState.posts\n          };\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleUpdate = updatedData => {\n      console.log(updatedData);\n      fetch(`${baseUrl}/${updatedData.id}`, {\n        body: JSON.stringify(updatedData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(updatedItem => {\n        this.props.handleView('home');\n        this.fetchPosts();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDelete = id => {\n      console.log(id);\n      fetch(`${baseUrl}/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(json => {\n        this.fetchPosts();\n        this.setState(prevState => {\n          const posts = prevState.posts.filter(post => post._id !== id);\n          return {\n            posts\n          };\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      posts: []\n    };\n  } //FETCH\n\n\n  // componentDidMount() {\n  //   axios.get(`${baseUrl}`)\n  //     .then(res => {\n  //       this.setState({ posts:res.data });\n  //     })\n  //     // .catch (err) => {\n  //     //   console.log(err);\n  //     // }\n  // };\n  componentDidMount() {\n    this.fetchPosts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, this.props.view.pageTitle), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, this.props.view.page === 'home' ? this.state.posts.map(postData => /*#__PURE__*/React.createElement(Post, {\n      key: postData._id,\n      postData: postData,\n      handleView: this.props.handleView,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(Form, {\n      handleCreate: this.handleCreate,\n      formInputs: this.props.formInputs,\n      view: this.props.view,\n      handleUpdate: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/courtney/dev/FinalProject/Front-End-Final/src/components/Main.js"],"names":["React","axios","Post","Form","baseUrl","process","env","NODE_ENV","Main","Component","constructor","props","fetchPosts","fetch","then","data","json","jData","setState","posts","catch","err","console","log","handleCreate","createData","body","JSON","stringify","method","headers","createdPost","jsonedPost","handleView","prevState","handleUpdate","updatedData","id","updatedItem","handleDelete","filter","post","_id","state","componentDidMount","render","view","pageTitle","page","map","postData","formInputs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Post from './Post.js';\nimport Form from './Form.js';\n\nlet baseUrl = '';\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'https://blooming-plateau-41459.herokuapp.com'\n} else {\n  baseUrl = 'https://blooming-plateau-41459.herokuapp.com'\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: []\n    }\n  }\n\n//FETCH\n  fetchPosts = () => {\n  fetch(`${baseUrl}`)\n  .then(data => data.json())\n  .then(jData => {\n    this.setState({\n      posts: jData\n    })\n  }).catch(err => console.log(err))\n  }\n\n//CREATE\n  handleCreate = (createData) => {\n    console.log('create', createData);\n    fetch(`${baseUrl}/post`, {\n      body: JSON.stringify(createData),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(createdPost => {\n      return createdPost.json()\n    }).then(jsonedPost => {\n      console.log(jsonedPost)\n      this.props.handleView('home')\n      this.setState(prevState => {\n        console.log('state', prevState)\n        prevState.posts = jsonedPost\n        return {\n          posts: prevState.posts\n        }\n      })\n    }).catch(err => console.log(err))\n    }\n\n//UPDATE\n  handleUpdate = (updatedData) => {\n    console.log(updatedData);\n    fetch(`${baseUrl}/${updatedData.id}`, {\n      body: JSON.stringify(updatedData),\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(updatedItem => {\n      this.props.handleView('home')\n      this.fetchPosts()\n    }).catch(err => console.log(err))\n  }\n\n//DELETE\n  handleDelete = (id) => {\n    console.log(id);\n    fetch(`${baseUrl}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(json => {\n      this.fetchPosts()\n      this.setState(prevState => {\n        const posts = prevState.posts.filter(post => post._id !==id)\n        return {posts}\n      })\n    }).catch(err => console.log(err))\n  }\n\n  // componentDidMount() {\n  //   axios.get(`${baseUrl}`)\n  //     .then(res => {\n  //       this.setState({ posts:res.data });\n  //     })\n  //     // .catch (err) => {\n  //     //   console.log(err);\n  //     // }\n  // };\n\n  componentDidMount() {\n    this.fetchPosts()\n  }\n\n  render() {\n    return(\n      <div>\n      <h1>{this.props.view.pageTitle}</h1>\n      <div>\n    { this.props.view.page === 'home' ?\n       this.state.posts.map((postData) => (\n        <Post\n          key={postData._id}\n          postData={postData}\n          handleView={this.props.handleView}\n          handleDelete={this.handleDelete}\n        />\n      ))\n      : <Form\n          handleCreate={this.handleCreate}\n          formInputs={this.props.formInputs}\n          view={this.props.view}\n          handleUpdate={this.handleUpdate}\n        />\n    }\n      </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}